/*
Copyright 2019 The NSQ-Operator Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/andyxning/nsq-operator/pkg/apis/nsqio/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// NsqdScaleLister helps list NsqdScales.
type NsqdScaleLister interface {
	// List lists all NsqdScales in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.NsqdScale, err error)
	// NsqdScales returns an object that can list and get NsqdScales.
	NsqdScales(namespace string) NsqdScaleNamespaceLister
	NsqdScaleListerExpansion
}

// nsqdScaleLister implements the NsqdScaleLister interface.
type nsqdScaleLister struct {
	indexer cache.Indexer
}

// NewNsqdScaleLister returns a new NsqdScaleLister.
func NewNsqdScaleLister(indexer cache.Indexer) NsqdScaleLister {
	return &nsqdScaleLister{indexer: indexer}
}

// List lists all NsqdScales in the indexer.
func (s *nsqdScaleLister) List(selector labels.Selector) (ret []*v1alpha1.NsqdScale, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.NsqdScale))
	})
	return ret, err
}

// NsqdScales returns an object that can list and get NsqdScales.
func (s *nsqdScaleLister) NsqdScales(namespace string) NsqdScaleNamespaceLister {
	return nsqdScaleNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// NsqdScaleNamespaceLister helps list and get NsqdScales.
type NsqdScaleNamespaceLister interface {
	// List lists all NsqdScales in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.NsqdScale, err error)
	// Get retrieves the NsqdScale from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.NsqdScale, error)
	NsqdScaleNamespaceListerExpansion
}

// nsqdScaleNamespaceLister implements the NsqdScaleNamespaceLister
// interface.
type nsqdScaleNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all NsqdScales in the indexer for a given namespace.
func (s nsqdScaleNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.NsqdScale, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.NsqdScale))
	})
	return ret, err
}

// Get retrieves the NsqdScale from the indexer for a given namespace and name.
func (s nsqdScaleNamespaceLister) Get(name string) (*v1alpha1.NsqdScale, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("nsqdscale"), name)
	}
	return obj.(*v1alpha1.NsqdScale), nil
}
