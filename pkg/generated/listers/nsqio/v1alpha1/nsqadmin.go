/*
Copyright 2019 The NSQ-Operator Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/andyxning/nsq-operator/pkg/apis/nsqio/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// NsqAdminLister helps list NsqAdmins.
type NsqAdminLister interface {
	// List lists all NsqAdmins in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.NsqAdmin, err error)
	// NsqAdmins returns an object that can list and get NsqAdmins.
	NsqAdmins(namespace string) NsqAdminNamespaceLister
	NsqAdminListerExpansion
}

// nsqAdminLister implements the NsqAdminLister interface.
type nsqAdminLister struct {
	indexer cache.Indexer
}

// NewNsqAdminLister returns a new NsqAdminLister.
func NewNsqAdminLister(indexer cache.Indexer) NsqAdminLister {
	return &nsqAdminLister{indexer: indexer}
}

// List lists all NsqAdmins in the indexer.
func (s *nsqAdminLister) List(selector labels.Selector) (ret []*v1alpha1.NsqAdmin, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.NsqAdmin))
	})
	return ret, err
}

// NsqAdmins returns an object that can list and get NsqAdmins.
func (s *nsqAdminLister) NsqAdmins(namespace string) NsqAdminNamespaceLister {
	return nsqAdminNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// NsqAdminNamespaceLister helps list and get NsqAdmins.
type NsqAdminNamespaceLister interface {
	// List lists all NsqAdmins in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.NsqAdmin, err error)
	// Get retrieves the NsqAdmin from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.NsqAdmin, error)
	NsqAdminNamespaceListerExpansion
}

// nsqAdminNamespaceLister implements the NsqAdminNamespaceLister
// interface.
type nsqAdminNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all NsqAdmins in the indexer for a given namespace.
func (s nsqAdminNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.NsqAdmin, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.NsqAdmin))
	})
	return ret, err
}

// Get retrieves the NsqAdmin from the indexer for a given namespace and name.
func (s nsqAdminNamespaceLister) Get(name string) (*v1alpha1.NsqAdmin, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("nsqadmin"), name)
	}
	return obj.(*v1alpha1.NsqAdmin), nil
}
